{# Plantilla Jinja2 para el archivo 'fvSchemes' de OpenFOAM #}

ddtSchemes
{
    default     {{ ddtSchemes }};
}

gradSchemes
{
    default     {{ gradSchemes }};
}

divSchemes
{
    {% if divSchemes == 'damBreak' %}
    div(rhoPhi,U)   Gauss linearUpwind grad(U);
    div(phi,alpha)  Gauss vanLeer;
    div(phirb,alpha) Gauss linear;
    div(((rho*nuEff)*dev2(T(grad(U))))) Gauss linear;
    {% endif %}

    {% if divSchemes == 'waterChannel' %}
    default             none;

    div(rhoPhi,U)       Gauss linearUpwind grad(U);
    div(phi,alpha)      Gauss vanLeer;
    div(phirb,alpha)    Gauss linear;

    "div\(phi,(k|omega)\)"      Gauss upwind;
    div(((rho*nuEff)*dev2(T(grad(U))))) Gauss linear;

    div(phi,s)   Gauss vanLeer;
    div(phirb,s) Gauss linear;

    {%endif%}
}

laplacianSchemes
{
    default     {{laplacianSchemes}} {{snGradSchemes}};
}

interpolationSchemes
{
    default     {{ interpolationSchemes }};
}

snGradSchemes
{
    default     {{ snGradSchemes }};
}

{% if wallDist is not none%}
wallDist
{
    method          {{wallDist}};
}


{%endif%}